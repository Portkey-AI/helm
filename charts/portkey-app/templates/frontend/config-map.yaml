apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "portkey.fullname" . }}-{{ .Values.frontend.name }}
  labels:
    {{- include "portkey.labels" . | nindent 4 }}
  annotations:
    {{- include "portkey.annotations" . | nindent 4 }}
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }
        
        location /config.js {
            alias /usr/share/nginx/html/config.js;
        }

        location /albus/ {
            rewrite ^/albus(.*)$ $1 break;
            proxy_pass http://{{ include "portkey.fullname" . }}-{{ .Values.backend.name }}:{{ .Values.backend.containerPort }};
             # Pass the original host header
            proxy_set_header Host $http_host;
            
            # Pass the real IP of the client
            proxy_set_header X-Real-IP $remote_addr;
            
            # Pass the original protocol (http or https)
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass all headers
            proxy_pass_request_headers on;
            
            # Pass the original request method
            proxy_method $request_method;
            
            # Pass the original request body
            proxy_pass_request_body on;

            # Preserve the original URI
            proxy_set_header X-Original-URI $request_uri;

            # Pass the full original URL
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Don't change anything in the request body
            proxy_set_body $request_body;

            # Don't buffer proxied requests
            proxy_buffering off;
        }
        {{- if .Values.gateway.enabled -}}
        location /api/ {
            rewrite ^/api(.*)$ $1 break;
            proxy_pass http://{{ include "portkey.fullname" . }}-{{ .Values.gateway.name }}:{{ .Values.gateway.containerPort }};
             # Pass the original host header
            proxy_set_header Host $http_host;
            
            # Pass the real IP of the client
            proxy_set_header X-Real-IP $remote_addr;
            
            # Pass the original protocol (http or https)
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass all headers
            proxy_pass_request_headers on;
            
            # Pass the original request method
            proxy_method $request_method;
            
            # Pass the original request body
            proxy_pass_request_body on;

            # Preserve the original URI
            proxy_set_header X-Original-URI $request_uri;

            # Pass the full original URL
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Don't change anything in the request body
            proxy_set_body $request_body;

            # Don't buffer proxied requests
            proxy_buffering off;
        }
        {{- end}}

        error_page 404 /index.html;

        # Additional security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    }
  config.js: |
    window.APP_CONFIG = { VITE_API_URL: "http://{{ include "portkey.fullname" . }}-{{ .Values.gateway.name }}:{{ .Values.gateway.containerPort }}", VITE_BASE_URL: "/albus", VITE_PRIVATE_DEPLOYMENT: "ON", VITE_AUTH_MODE: "{{- if .Values.config.oauth.enabled }}SSO{{- end }}{{- if .Values.config.noAuth.enabled }}NO_AUTH{{- end }}" };